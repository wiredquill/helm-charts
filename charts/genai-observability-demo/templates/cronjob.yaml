
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "genai-observability-demo.fullname" . }}-run-script
  labels: 
    {{- include "genai-observability-demo.labels" . | nindent 4 }}
data:
  run.sh: |-
    #!/bin/sh
    printf "Calling Simple App (${APP_SIMPLE_URL})\n"
    curl --no-progress-meter "http://${APP_SIMPLE_URL}:8000/ask"
    printf "\nCalling Rag101 App (${APP_RAG101_URL})\n"
    curl --no-progress-meter "http://${APP_RAG101_URL}:8000/ask"
    printf "\nCalling Rag102 App (${APP_RAG102_URL})\n"
    curl --no-progress-meter "http://${APP_RAG102_URL}:8000/ask"
    sleep 5
  
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "genai-observability-demo.fullname" . }}
  labels: 
    {{- include "genai-observability-demo.labels" . | nindent 4 }}
spec:
  jobTemplate:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "genai-observability-demo.labels" . | nindent 8 }}
        {{- with .Values.pobLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 1
      template:
        spec:
          serviceAccountName: {{ include "genai-observability-demo.serviceAccountName" . }}
          containers:
          - command:
            - bin/sh
            - -c
            - /app/run.sh
            env:
              - name: APP_SIMPLE_URL
                value: {{ include "genai-observability-demo.fullname" . }}-simple
              - name: APP_RAG101_URL
                value: {{ include "genai-observability-demo.fullname" . }}-rag101
              - name: APP_RAG102_URL
                value: {{ include "genai-observability-demo.fullname" . }}-rag102
            image: badouralix/curl-jq:alpine
            imagePullPolicy: IfNotPresent 
            name: curl
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /app/run.sh
              name: run-script
              subPath: run.sh
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - configMap:
              name: {{ include "genai-observability-demo.fullname" . }}-run-script
              defaultMode: 0755
            name: run-script
  schedule: "{{.Values.schedule}}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  suspend: false
  concurrencyPolicy: Forbid
